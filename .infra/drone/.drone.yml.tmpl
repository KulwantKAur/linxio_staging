{{- define "namespace" -}}
linxio
{{- end -}}

{{- define "aws-region" -}}
ap-southeast-2
{{- end -}}

{{- define "branch-slug" -}}
BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
{{- end -}}

{{- define "step-kaniko" -}}
image: gcr.io/kaniko-project/executor:v1.6.0-debug
entrypoint: [ "/busybox/sh", "-ec" ]
depends_on:
  - aws-env
command:
  - |
    eval $(cat environment);
    set -x;
    {{ tmpl.Exec "branch-slug" }}
    echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
    /kaniko/executor \
      --context=dir://$DRONE_WORKSPACE{{ index . "context" | conv.Default "" | strings.Trim "/" | print "/" }} \
      --dockerfile=$DRONE_WORKSPACE/{{ .dockerfile }} \
      --verbosity=$${KANIKO_VERBOSITY:-info} \
      --destination="{{ .destination }}:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
      --destination="{{ .destination }}:$BRANCH_SLUG" \
      --registry-mirror=mirror.gcr.io \
      --cache=true \
      --cache-repo="{{ .cache }}" \
    ;
{{- end -}}

{{- define "step-deploy" -}}
name: deploy
image: node
entrypoint: [ "/bin/bash", "-ec" ]
depends_on:
  - aws-env
command:
  - |
    eval $(cat environment);
    set -x;
    {{ tmpl.Exec "branch-slug" }}
    export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
    cd .infra/deploy;
    yarn install --frozen-lockfile;
    yarn run start {{ .mod }};
environment:
  ECS_CLUSTER: '{{ .cluster }}'
  AWS_REGION: {{ tmpl.Exec "aws-region" }}
  FORCE_COLOR: '1'
{{- end -}}

{{- define "aws-env" -}}
name: aws-env
image: alpine
commands:
  - apk add curl
  - curl -L https://github.com/Droplr/aws-env/raw/v0.4/bin/aws-env-linux-amd64 -o /tmp/aws-env
  - chmod +x /tmp/aws-env
  - /tmp/aws-env > environment
environment:
  AWS_ENV_PATH: /{{ tmpl.Exec "namespace" }}/common/env/drone-ci
  AWS_REGION: {{ tmpl.Exec "aws-region" }}
{{- end -}}

# Generated by .infra/drone/build.sh using .drone.yml.tmpl file
kind: pipeline
type: docker
name: build

concurrency:
  limit: 3

steps:
  - {{ tmpl.Exec "aws-env" . | indent 4 | strings.Trim " " }}

  - name: app-api-trackers-php-fpm
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/api-trackers/php-fpm/Dockerfile"
      "destination" "$ECR_APP_API_TRACKERS_PHP_FPM"
      "cache" "$ECR_APP_API_TRACKERS_PHP_FPM_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: app-api-trackers-nginx
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/api-trackers/nginx/Dockerfile"
      "destination" "$ECR_APP_API_TRACKERS_NGINX"
      "cache" "$ECR_APP_API_TRACKERS_NGINX_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: app-api-users-php-fpm
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/api-users/php-fpm/Dockerfile"
      "destination" "$ECR_APP_API_USERS_PHP_FPM"
      "cache" "$ECR_APP_API_USERS_PHP_FPM_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: app-api-users-nginx
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/api-users/nginx/Dockerfile"
      "destination" "$ECR_APP_API_USERS_NGINX"
      "cache" "$ECR_APP_API_USERS_NGINX_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: tracker-provider
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/provider/Dockerfile"
      "destination" "$ECR_TRACKER_PROVIDER"
      "cache" "$ECR_TRACKER_PROVIDER_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: tracker-teltonika-server
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/teltonika/server/Dockerfile"
      "destination" "$ECR_TRACKER_TELTONIKA_SERVER"
      "cache" "$ECR_TRACKER_TELTONIKA_SERVER_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: tracker-topflytech-server
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/topflytech/server/Dockerfile"
      "destination" "$ECR_TRACKER_TOPFLYTECH_SERVER"
      "cache" "$ECR_TRACKER_TOPFLYTECH_SERVER_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: tracker-ulbotech-server
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/ulbotech/server/Dockerfile"
      "destination" "$ECR_TRACKER_ULBOTECH_SERVER"
      "cache" "$ECR_TRACKER_ULBOTECH_SERVER_CACHE"
    ) | indent 4 | strings.Trim " " }}

  - name: tracker-pivotel-server
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/pivotel/server/Dockerfile"
      "destination" "$ECR_TRACKER_PIVOTEL_SERVER"
      "cache" "$ECR_TRACKER_PIVOTEL_SERVER_CACHE"
    ) | indent 4 | strings.Trim " " }}
    
  - name: tracker-traccar
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/tracker/traccar/Dockerfile"
      "context" ".infra/tracker/traccar"
      "destination" "$ECR_TRACKER_TRACCAR"
      "cache" "$ECR_TRACKER_TRACCAR_CACHE"
    ) | indent 4 | strings.Trim " " }}
  
  - name: centrifugo
    {{ tmpl.Exec "step-kaniko" (dict
      "dockerfile" ".infra/centrifugo/Dockerfile"
      "context" ".infra/centrifugo"
      "destination" "$ECR_CENTRIFUGO"
      "cache" "$ECR_CENTRIFUGO_CACHE"
    ) | indent 4 | strings.Trim " " }}

trigger:
  event:
    - push
    - pull_request
  action:
    exclude:
    - opened
  branch:
    - staging
    - master

---

kind: pipeline
type: docker
name: deploy-stage

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - {{ tmpl.Exec "aws-env" . | indent 4 | strings.Trim " " }}

  - {{ tmpl.Exec "step-deploy" (dict
      "mod" "api"
      "cluster" (print (tmpl.Exec "namespace") "-stage-main")
    ) | indent 4 | strings.Trim " " }}

trigger:
  event:
    - promote
  target:
    - stage
  branch:
    - staging

---

kind: pipeline
type: docker
name: deploy-stage-track

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - {{ tmpl.Exec "aws-env" . | indent 4 | strings.Trim " " }}

  - {{ tmpl.Exec "step-deploy" (dict
      "mod" "track"
      "cluster" (print (tmpl.Exec "namespace") "-stage-main")
    ) | indent 4 | strings.Trim " " }}

trigger:
  event:
    - promote
  target:
    - stage-track
  branch:
    - staging
    
---

kind: pipeline
type: docker
name: deploy-prod

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - {{ tmpl.Exec "aws-env" . | indent 4 | strings.Trim " " }}

  - {{ tmpl.Exec "step-deploy" (dict
      "mod" "api"
      "cluster" (print (tmpl.Exec "namespace") "-prod-main")
    ) | indent 4 | strings.Trim " " }}

trigger:
  event:
    - promote
  target:
    - prod
  branch:
    - master

---

kind: pipeline
type: docker
name: deploy-prod-track

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - {{ tmpl.Exec "aws-env" . | indent 4 | strings.Trim " " }}

  - {{ tmpl.Exec "step-deploy" (dict
      "mod" "track"
      "cluster" (print (tmpl.Exec "namespace") "-prod-main")
    ) | indent 4 | strings.Trim " " }}

trigger:
  event:
    - promote
  target:
    - prod-track
  branch:
    - master