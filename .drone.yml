# Generated by .infra/drone/build.sh using .drone.yml.tmpl file
kind: pipeline
type: docker
name: build

concurrency:
  limit: 3

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: app-api-trackers-php-fpm
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-trackers/php-fpm/Dockerfile \
          --build-arg "fcm_project_id=$fcm_project_id" \
          --build-arg "fcm_private_key_id=$fcm_private_key_id" \
          --build-arg "fcm_private_key=$fcm_private_key" \
          --build-arg "fcm_client_x509_cert_url=$fcm_client_x509_cert_url" \
          --build-arg "fcm_client_email=$fcm_client_email" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_TRACKERS_PHP_FPM:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_TRACKERS_PHP_FPM:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_TRACKERS_PHP_FPM_CACHE" \
        ;

  - name: app-api-trackers-nginx
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-trackers/nginx/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_TRACKERS_NGINX:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_TRACKERS_NGINX:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_TRACKERS_NGINX_CACHE" \
        ;
  - name: app-api-users-php-fpm
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-users/php-fpm/Dockerfile \
          --build-arg "fcm_project_id=$fcm_project_id" \
          --build-arg "fcm_private_key_id=$fcm_private_key_id" \
          --build-arg "fcm_private_key=$fcm_private_key" \
          --build-arg "fcm_client_x509_cert_url=$fcm_client_x509_cert_url" \
          --build-arg "fcm_client_email=$fcm_client_email" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_USERS_PHP_FPM:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_USERS_PHP_FPM:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_USERS_PHP_FPM_CACHE" \
        ;

  - name: app-api-users-nginx
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-users/nginx/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_USERS_NGINX:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_USERS_NGINX:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_USERS_NGINX_CACHE" \
        ;

  - name: tracker-traccar
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/.infra/traccar \
          --dockerfile=$DRONE_WORKSPACE/.infra/traccar/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_TRACKER_TRACCAR:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_TRACKER_TRACCAR:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_TRACKER_TRACCAR_CACHE" \
        ;

  - name: centrifugo
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/.infra/centrifugo \
          --dockerfile=$DRONE_WORKSPACE/.infra/centrifugo/Dockerfile \
          --build-arg "JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY" \
          --build-arg "CENTRIFUGO_ADMIN_PASSWORD=$CENTRIFUGO_ADMIN_PASSWORD" \
          --build-arg "CENTRIFUGO_ADMIN_SECRET=$CENTRIFUGO_ADMIN_SECRET" \
          --build-arg "CENTRIFUGO_API_KEY=$CENTRIFUGO_API_KEY" \
          --build-arg "CENTRIFUGO_ALLOWED_ORIGINS=$CENTRIFUGO_ALLOWED_ORIGINS" \
          --build-arg "CENTRIFUGO_ENGINE=$CENTRIFUGO_ENGINE" \
          --build-arg "CENTRIFUGO_REDIS_ADDRESS=$CENTRIFUGO_REDIS_ADDRESS" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_CENTRIFUGO:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_CENTRIFUGO:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_CENTRIFUGO_CACHE" \
        ;

trigger:
  event:
    - push
    - pull_request
  action:
    exclude:
    - opened
  branch:
    - master

---

kind: pipeline
type: docker
name: build-stage

concurrency:
  limit: 3

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: app-api-trackers-php-fpm
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-trackers/php-fpm/Dockerfile \
          --build-arg "fcm_project_id=$fcm_project_id" \
          --build-arg "fcm_private_key_id=$fcm_private_key_id" \
          --build-arg "fcm_private_key=$fcm_private_key" \
          --build-arg "fcm_client_x509_cert_url=$fcm_client_x509_cert_url" \
          --build-arg "fcm_client_email=$fcm_client_email" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_TRACKERS_PHP_FPM:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_TRACKERS_PHP_FPM:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_TRACKERS_PHP_FPM_CACHE" \
        ;

  - name: app-api-trackers-nginx
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-trackers/nginx/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_TRACKERS_NGINX:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_TRACKERS_NGINX:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_TRACKERS_NGINX_CACHE" \
        ;
  - name: app-api-users-php-fpm
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-users/php-fpm/Dockerfile \
          --build-arg "fcm_project_id=$fcm_project_id" \
          --build-arg "fcm_private_key_id=$fcm_private_key_id" \
          --build-arg "fcm_private_key=$fcm_private_key" \
          --build-arg "fcm_client_x509_cert_url=$fcm_client_x509_cert_url" \
          --build-arg "fcm_client_email=$fcm_client_email" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_USERS_PHP_FPM:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_USERS_PHP_FPM:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_USERS_PHP_FPM_CACHE" \
        ;

  - name: app-api-users-nginx
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/ \
          --dockerfile=$DRONE_WORKSPACE/.infra/api-users/nginx/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_APP_API_USERS_NGINX:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_APP_API_USERS_NGINX:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_APP_API_USERS_NGINX_CACHE" \
        ;
    
  - name: tracker-traccar
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/.infra/traccar \
          --dockerfile=$DRONE_WORKSPACE/.infra/traccar/Dockerfile \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_TRACKER_TRACCAR:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_TRACKER_TRACCAR:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_TRACKER_TRACCAR_CACHE" \
        ;

  - name: centrifugo
    image: gcr.io/kaniko-project/executor:v1.6.0-debug
    entrypoint: [ "/busybox/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        echo '{ "credsStore": "ecr-login" }' > /kaniko/.docker/config.json;
        /kaniko/executor \
          --context=dir://$DRONE_WORKSPACE/.infra/centrifugo \
          --dockerfile=$DRONE_WORKSPACE/.infra/centrifugo/Dockerfile \
          --build-arg "JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY" \
          --build-arg "CENTRIFUGO_ADMIN_PASSWORD=$CENTRIFUGO_ADMIN_PASSWORD" \
          --build-arg "CENTRIFUGO_ADMIN_SECRET=$CENTRIFUGO_ADMIN_SECRET" \
          --build-arg "CENTRIFUGO_API_KEY=$CENTRIFUGO_API_KEY" \
          --build-arg "CENTRIFUGO_ALLOWED_ORIGINS=$CENTRIFUGO_ALLOWED_ORIGINS" \
          --build-arg "CENTRIFUGO_ENGINE=$CENTRIFUGO_ENGINE" \
          --build-arg "CENTRIFUGO_REDIS_STAGE_ADDRESS=$CENTRIFUGO_REDIS_STAGE_ADDRESS" \
          --verbosity=$${KANIKO_VERBOSITY:-info} \
          --destination="$ECR_CENTRIFUGO:$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8}" \
          --destination="$ECR_CENTRIFUGO:$BRANCH_SLUG" \
          --registry-mirror=mirror.gcr.io \
          --cache=true \
          --cache-repo="$ECR_CENTRIFUGO_CACHE" \
        ;

trigger:
  event:
    - push
    - pull_request
  action:
    exclude:
    - opened
  branch:
    - staging


---

kind: pipeline
type: docker
name: deploy-prod

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: node:23.5.0
    entrypoint: [ "/bin/bash", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        cd .infra/deploy/prod;
        yarn add ts-node --dev;
        yarn install;
        yarn run start api;
    environment:
      ECS_CLUSTER: 'linxio-prod-main'
      AWS_REGION: ap-southeast-2
      FORCE_COLOR: '1'

trigger:
  event:
    - promote
  target:
    - prod
  branch:
    - master

---

kind: pipeline
type: docker
name: deploy-prod-traccar

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: node:23.5.0
    entrypoint: [ "/bin/bash", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        cd .infra/deploy/prod;
        yarn install --frozen-lockfile;
        yarn run start traccar;
    environment:
      ECS_CLUSTER: 'linxio-prod-trackers'
      ECS_CLUSTER_TRACKER: 'linxio-prod-main'
      AWS_REGION: ap-southeast-2
      FORCE_COLOR: '1'

trigger:
  event:
    - promote
  target:
    - prod-traccar
  branch:
    - master

---

kind: pipeline
type: docker
name: deploy-stage

concurrency:
  limit: 3

depends_on:
  - build-stage
steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: node:23.5.0
    entrypoint: [ "/bin/bash", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        cd .infra/deploy/stage;
        yarn add ts-node --dev;
        yarn install;
        yarn run start api;
    environment:
      ECS_CLUSTER: 'linxio-stage-main'
      AWS_REGION: ap-southeast-2
      FORCE_COLOR: '1'

trigger:
  event:
    - promote
  target:
    - stage
  branch:
    - staging

---

kind: pipeline
type: docker
name: deploy-stage-traccar

concurrency:
  limit: 3

depends_on:
  - build-stage

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: node:23.5.0
    entrypoint: [ "/bin/bash", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        cd .infra/deploy/stage;
        yarn install --frozen-lockfile;
        yarn run start traccar;
    environment:
      ECS_CLUSTER: 'linxio-stage-trackers'
      ECS_CLUSTER_TRACKER: 'linxio-stage-main'
      AWS_REGION: ap-southeast-2
      FORCE_COLOR: '1'

trigger:
  event:
    - promote
  target:
    - stage-traccar
  branch:
    - staging

---

kind: pipeline
type: docker
name: deploy-stage-centrifugo

concurrency:
  limit: 3

depends_on:
  - build

steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: alpine
    ports: [ 22 ]
    entrypoint: [ "/bin/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        apk add --no-cache openssh openrc;
        rc-update add sshd;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        echo "$BASTION_KEY" > bastion.pem && chmod 400 bastion.pem;
        addgroup -S ec2-user && adduser \
        --disabled-password \
        --gecos "" \
        --home "$(pwd)" \
        --ingroup "ec2-user" \
        --no-create-home \
        "ec2-user";
        chown ec2-user:ec2-user bastion.pem;
        ssh -tt -i "bastion.pem" -o StrictHostKeyChecking=no ec2-user@ec2-13-54-244-165.ap-southeast-2.compute.amazonaws.com 'ssh -tt -i "~/.ssh/centrifugo.pem" -o StrictHostKeyChecking=no ec2-user@ec2-52-62-209-70.ap-southeast-2.compute.amazonaws.com 'sudo docker stop centrifugo && sudo docker rm centrifugo && sudo docker rmi $ECR_CENTRIFUGO:$BRANCH_SLUG && sudo docker run --name centrifugo --ulimit nofile=65536:65536 -d -p 8000:8000 $ECR_CENTRIFUGO:$BRANCH_SLUG && sudo docker ps'';

trigger:
  event:
    - promote
  target:
    - stage-centrifugo
  branch:
    - staging

---

kind: pipeline
type: docker
name: deploy-prod-centrifugo

concurrency:
  limit: 3

depends_on:
  - build
steps:
  - name: aws-env
    image: alpine
    command:
      - sh
      - -c
      - |
        apk add curl;
        curl -s -L -H "Authorization: Bearer $TOKEN" https://api.bitbucket.org/2.0/repositories/linxio/linxio_infra/downloads/aws-env-amd64-v0-0-6 -o /tmp/aws-env;
        chmod +x /tmp/aws-env;
        /tmp/aws-env > environment;
    environment:
      AWS_ENV_PATH: /linxio/common/env/drone-ci
      AWS_REGION: ap-southeast-2
      TOKEN:
        from_secret: TOKEN

  - name: deploy
    image: alpine
    ports: [ 22 ]
    entrypoint: [ "/bin/sh", "-ec" ]
    depends_on:
      - aws-env
    command:
      - |
        eval $(cat environment);
        set -x;
        apk add --no-cache openssh openrc;
        rc-update add sshd;
        BRANCH_SLUG=$(echo $DRONE_COMMIT_BRANCH | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z);
        export DOCKER_IMAGE_TAG=$BRANCH_SLUG-$${DRONE_COMMIT_SHA:0:8};
        echo "$BASTION_KEY" > bastion.pem && chmod 400 bastion.pem;
        addgroup -S ec2-user && adduser \
        --disabled-password \
        --gecos "" \
        --home "$(pwd)" \
        --ingroup "ec2-user" \
        --no-create-home \
        "ec2-user";
        chown ec2-user:ec2-user bastion.pem;
        ssh -tt -i "bastion.pem" -o StrictHostKeyChecking=no ec2-user@ec2-13-54-244-165.ap-southeast-2.compute.amazonaws.com 'ssh -tt -i "~/.ssh/centrifugo.pem" -o StrictHostKeyChecking=no ec2-user@ec2-52-62-209-70.ap-southeast-2.compute.amazonaws.com 'sudo docker stop centrifugo && sudo docker rm centrifugo && sudo docker rmi $ECR_CENTRIFUGO:$BRANCH_SLUG && sudo docker run --name centrifugo --ulimit nofile=65536:65536 -d -p 8000:8000 $ECR_CENTRIFUGO:$BRANCH_SLUG && sudo docker ps'';

trigger:
  event:
    - promote
  target:
    - prod-centrifugo
  branch:
    - master