<?php

declare(strict_types = 1);

namespace App\Repository;

use App\Entity\DigitalForm;
use App\Entity\DigitalFormAnswer;
use App\Entity\User;
use App\Entity\Vehicle;

/**
 * DigitalFormAnswerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DigitalFormAnswerRepository extends \Doctrine\ORM\EntityRepository
{
    public function getById(int $id): ?DigitalFormAnswer
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('dfa')
            ->from(DigitalFormAnswer::class, 'dfa')
            ->andWhere('dfa.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param Vehicle $vehicle
     * @param string $type
     * @param User|null $user
     * @param DigitalForm|null $form
     * @return DigitalFormAnswer|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getLatestDigitalFormAnswer(
        Vehicle $vehicle,
        string $type,
        User $user = null,
        DigitalForm $form = null
    ): ?DigitalFormAnswer {
        $queryBuilder = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('dfa')
            ->from(DigitalFormAnswer::class, 'dfa')
            ->leftJoin('dfa.digitalForm', 'df')
            ->andWhere('dfa.vehicle = :vehicle')
            ->andWhere('df.type = :type')
            ->setParameter('vehicle', $vehicle)
            ->setParameter('type', $type)
            ->orderBy('dfa.createdAt', 'DESC')
            ->setMaxResults(1);

        if ($user) {
            $queryBuilder
                ->andWhere('dfa.user = :user')
                ->setParameter('user', $user);
        }

        if ($form) {
            $queryBuilder
                ->andWhere('dfa.digitalForm = :form')
                ->setParameter('form', $form);
        }

        return $queryBuilder->getQuery()->getOneOrNullResult();
    }
}
