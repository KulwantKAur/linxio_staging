<?php

namespace App\Repository;

use App\Entity\EntityHistory;
use Doctrine\Common\Collections\Criteria;

/**
 * EntityHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntityHistoryRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $entityId
     * @param $type
     * @return EntityHistory|object
     */
    public function findOneByEntityIdAndType($entityId, $type)
    {
        return $this->findOneBy([
            'entityId' => $entityId,
            'type' => $type,
        ], ['createdAt' => 'DESC']);
    }

    public function findAllByCriteria($criteria)
    {
        return $this->findBy($criteria, ['createdAt' => 'DESC', 'id' => 'DESC']);
    }

    public function findQueryByCriteria($criteria)
    {
        $query = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('h')
            ->from(EntityHistory::class, 'h');

        foreach ($criteria as $field => $value) {
            $query->andWhere("h.$field = :$field")
                ->setParameter($field, $value);
        }

        $query->orderBy('h.createdAt', Criteria::DESC)
            ->orderBy('h.id', Criteria::DESC);

        return $query->getQuery();
    }

    /**
     * @param $criteria
     * @return object|null
     */
    public function findLastByCriteria($criteria)
    {
        return $this->findOneBy($criteria, ['id' => 'DESC']);
    }

    /**
     * @param $criteria
     * @param array $exclude
     * @return mixed
     */
    public function findAllWithExclude($criteria, array $exclude)
    {
        $query = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('h')
            ->from(EntityHistory::class, 'h');

        foreach ($criteria as $field => $value) {
            $query->andWhere("h.$field = :$field")
                ->setParameter($field, $value);
        }
        $query->andWhere($query->expr()->notIn('h.payload', $exclude))
            ->orderBy('h.id', 'DESC');

        return $query->getQuery()->getResult();
    }
}
