<?php

namespace App\Repository;

use App\Entity\DeviceReplacement;
use Doctrine\ORM\Query;

/**
 * DeviceReplacementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeviceReplacementRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param array $params
     * @param string $sort
     * @param string $order
     * @return Query
     */
    public function getAllQuery(
        array  $params,
        string $sort,
        string $order
    ): Query {
        $sort = match ($sort) {
            'client' => 'c.name',
            default => 'dr.' . $sort
        };

        $reason = $params['reason'] ?? null;
        $imeiOld = $params['imeiOld'] ?? null;
        $imeiNew = $params['imeiNew'] ?? null;
        $deviceOldId = $params['deviceOldId'] ?? null;
        $deviceNewId = $params['deviceNewId'] ?? null;
        $teamIds = $params['teamId'] ?? [];
        $isReturned = $params['isReturned'] ?? null;
        $client = $params['client'] ?? null;
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('dr')
            ->from(DeviceReplacement::class, 'dr')
            ->leftJoin('dr.team', 't')
            ->leftJoin('t.client', 'c')
            ->orderBy($sort, $order);

        if ($imeiOld) {
            $query->andWhere('LOWER(dr.imeiOld) LIKE LOWER(:imeiOld)')
                ->setParameter('imeiOld', '%' . $imeiOld . '%');
        }
        if ($imeiNew) {
            $query->andWhere('LOWER(dr.imeiNew) LIKE LOWER(:imeiNew)')
                ->setParameter('imeiNew', '%' . $imeiNew . '%');
        }
        if ($deviceOldId) {
            $query->andWhere('dr.deviceOld = :deviceOldId')
                ->setParameter('deviceOldId', $deviceOldId);
        }
        if ($deviceNewId) {
            $query->andWhere('dr.deviceNew = :deviceNewId')
                ->setParameter('deviceNewId', $deviceNewId);
        }
        if ($teamIds) {
            $query->andWhere('dr.team IN (:teamIds)')
                ->setParameter('teamIds', $teamIds);
        }
        if ($reason) {
            $query->andWhere('LOWER(dr.reason) LIKE LOWER(:reason)')
                ->setParameter('reason', '%' . $reason . '%');
        }
        if (!is_null($isReturned)) {
            $query->andWhere('dr.isReturned = :isReturned')
                ->setParameter('isReturned', $isReturned);
        }
        if ($client) {
            $query->andWhere('LOWER(c.name) LIKE LOWER(:client)')
                ->setParameter('client', '%' . $client . '%');
        }

        return $query->getQuery();
    }
}
