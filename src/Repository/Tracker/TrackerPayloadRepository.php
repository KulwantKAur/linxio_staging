<?php

namespace App\Repository\Tracker;

use App\Entity\Device;
use App\Entity\Tracker\TrackerPayload;
use Doctrine\ORM\Query;

/**
 * TrackerPayloadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrackerPayloadRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param string $imei
     * @param string $dateFrom
     * @param string $dateTo
     * @return mixed
     */
    public function getPayloadsByImei($imei, $dateFrom, $dateTo)
    {
        // todo fix payload order
        // ->groupBy(['tp.payload'])
        // ->orderBy('tp.createdAt', Criteria::ASC)
        // ->addOrderBy('tp.id', Criteria::ASC)

        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('tp.payload')
            ->from(TrackerPayload::class, 'tp')
            ->leftJoin('tp.trackerHistory', 'th')
            ->leftJoin('tp.trackerAuth', 'ta')
            ->where('ta.imei = :imei')
            ->andWhere('th.ts >= :dateFrom')
            ->andWhere('th.ts <= :dateTo')
            ->andWhere('th.lat <> 0')
            ->setParameter('imei', $imei)
            ->setParameter('dateFrom', $dateFrom)
            ->setParameter('dateTo', $dateTo)
            ->getQuery()
            ->getResult();
    }

    public function getByDeviceAndRangeQuery(
        Device $device,
        ?string $startedAt,
        ?string $finishedAt
    ): Query {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('tp')
            ->from(TrackerPayload::class, 'tp')
            ->where('tp.device = :device')
            ->setParameter('device', $device);

        if ($startedAt) {
            $query->andWhere('tp.createdAt >= :startedAt')
                ->setParameter('startedAt', $startedAt);
        }
        if ($finishedAt) {
            $query->andWhere('tp.createdAt <= :finishedAt')
                ->setParameter('finishedAt', $finishedAt);
        }

        return $query->getQuery();
    }

    public function getByDeviceAndRangeCount(
        Device $device,
        ?string $startedAt,
        ?string $finishedAt
    ): int {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('COUNT(tp.id)')
            ->from(TrackerPayload::class, 'tp')
            ->where('tp.device = :device')
            ->setParameter('device', $device);

        if ($startedAt) {
            $query->andWhere('tp.createdAt >= :startedAt')
                ->setParameter('startedAt', $startedAt);
        }
        if ($finishedAt) {
            $query->andWhere('tp.createdAt <= :finishedAt')
                ->setParameter('finishedAt', $finishedAt);
        }

        return $query->getQuery()->getSingleScalarResult();
    }
}
