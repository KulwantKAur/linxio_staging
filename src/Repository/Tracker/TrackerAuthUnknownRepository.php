<?php

namespace App\Repository\Tracker;

use App\Entity\Tracker\TrackerAuthUnknown;
use Doctrine\Common\Collections\Criteria;

/**
 * TrackerAuthUnknownRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrackerAuthUnknownRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $socketId
     * @return object|TrackerAuthUnknown|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneBySocketId($socketId)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('ta')
            ->from(TrackerAuthUnknown::class, 'ta')
            ->where('ta.socketId = :socketId')
            ->setParameter('socketId', $socketId)
            ->orderBy('ta.createdAt', Criteria::DESC)
            ->getQuery()
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * @param string $imei
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function isImeiExists(string $imei): bool
    {
        $result = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('tau.id')
            ->from(TrackerAuthUnknown::class, 'tau')
            ->where('tau.imei = :imei')
            ->setParameter('imei', $imei)
            ->getQuery()
            ->setMaxResults(1)
            ->getOneOrNullResult();

        return boolval($result);
    }
}
