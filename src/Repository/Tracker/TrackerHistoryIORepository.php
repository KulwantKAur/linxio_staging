<?php

namespace App\Repository\Tracker;

use App\Entity\Tracker\TrackerHistoryIO;
use App\Entity\Tracker\TrackerIOType;
use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;

/**
 * TrackerHistoryIORepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrackerHistoryIORepository extends EntityRepository
{
    /**
     * @param \DateTimeInterface $ts
     * @param int $deviceId
     * @param TrackerIOType $type
     * @return mixed|TrackerHistoryIO
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getPreviousRecordByTsAndDeviceIdAndType(
        \DateTimeInterface $ts,
        int $deviceId,
        TrackerIOType $type
    ): ?TrackerHistoryIO {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('thio')
            ->from(TrackerHistoryIO::class, 'thio')
            ->where('IDENTITY(thio.device) = :deviceId')
            ->andWhere('thio.type = :type')
            ->andWhere('thio.occurredAtOn < :ts')
            ->setParameter('deviceId', $deviceId)
            ->setParameter('ts', $ts)
            ->setParameter('type', $type)
            ->orderBy('thio.occurredAtOn', Criteria::DESC)
            ->getQuery()
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }
}
