<?php

declare(strict_types = 1);

namespace App\Repository;

use App\Entity\Depot;
use App\Entity\DigitalFormScheduleRecipient;
use App\Entity\Vehicle;
use Doctrine\ORM\Query\Expr\Orx;
use Doctrine\Common\Collections\Collection;

/**
 * DigitalFormScheduleRecipientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DigitalFormScheduleRecipientRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return DigitalFormScheduleRecipient[]
     */
    public function getScheduleByParams(array $schedules, Vehicle $vehicle, ?Depot $depot, Collection $groups): array
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();

        //
        /**
         * Hack for multiply groups checking.
         * Group can be empty array, also can contains more then one item so,
         * we must add all item dynamically
         */
        $orX = new Orx();
        $orX->add($queryBuilder->expr()->eq('dfsr.type', ':typeAny'));
        $orX->add(
            $queryBuilder->expr()->andX(
                $queryBuilder->expr()->eq('dfsr.type', ':typeDepot'),
                $queryBuilder->expr()->eq('JSONB_CONTAINS(dfsr.value, :valueDepot)', 'true')
            )
        );
        $orX->add(
            $queryBuilder->expr()->andX(
                $queryBuilder->expr()->eq('dfsr.type', ':typeVehicle'),
                $queryBuilder->expr()->eq('JSONB_CONTAINS(dfsr.value, :valueVehicle)', 'true')
            )
        );

        foreach ($groups as $group) {
            $orX->add(
                $queryBuilder->expr()->andX(
                    $queryBuilder->expr()->eq('dfsr.type', "'" . DigitalFormScheduleRecipient::TYPE_GROUP . "'"),
                    $queryBuilder->expr()->eq('JSONB_CONTAINS(dfsr.value, \'' . $group->getId() . '\')', 'true')
                )
            );
        }

        return $queryBuilder
            ->select('dfsr')
            ->from(DigitalFormScheduleRecipient::class, 'dfsr')
            ->where(
                $queryBuilder->expr()->andX(
                    $queryBuilder->expr()->in('dfsr.digitalFormSchedule', ':digitalFormSchedules'),
                    $orX
                )
            )
            ->setParameter('digitalFormSchedules', $schedules)
            ->setParameter('typeAny', DigitalFormScheduleRecipient::TYPE_ANY)
            ->setParameter('typeDepot', DigitalFormScheduleRecipient::TYPE_DEPOT)
            ->setParameter('typeVehicle', DigitalFormScheduleRecipient::TYPE_VEHICLE)
            ->setParameter('valueDepot', $depot ? $depot->getId() : 0)
            ->setParameter('valueVehicle', $vehicle->getId())
            ->getQuery()
            ->getResult();
    }
}
