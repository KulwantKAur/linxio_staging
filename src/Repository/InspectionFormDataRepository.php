<?php

namespace App\Repository;

use App\Entity\InspectionFormData;
use App\Entity\User;
use App\Entity\UserGroup;
use App\Entity\Vehicle;

/**
 * InspectionFormDataRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InspectionFormDataRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Vehicle $vehicle
     * @param \DateTime $dateFrom
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getInspectionFormCountDataFromDate(Vehicle $vehicle, \DateTime $dateFrom)
    {
        $q = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('count(i) as count')
            ->from(InspectionFormData::class, 'i')
            ->leftJoin('i.vehicle', 'v')
            ->andWhere('v = :vehicle')
            ->andWhere('i.createdAt > :dateFrom')
            ->setParameter('vehicle', $vehicle)
            ->setParameter('dateFrom', $dateFrom);

        return $q->getQuery()->getSingleResult()['count'];
    }

    /**
     * @param $id
     * @param User $user
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getInspectionFormById($id, User $user)
    {
        $q = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('i')
            ->from(InspectionFormData::class, 'i')
            ->andWhere('i.id = :id')
            ->setParameter('id', $id)
            ->setMaxResults(1);

        if ($user->needToCheckUserGroup()) {
            $userVehicles = $this->getEntityManager()->getRepository(UserGroup::class)
                ->getUserVehiclesIdFromUserGroup($user);
            $q->andWhere('IDENTITY(i.vehicle) in (' . implode(', ', $userVehicles) . ')');
        }

        return $q->getQuery()->getOneOrNullResult();
    }
}
